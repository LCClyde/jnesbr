/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PatternTableViewer.java
 *
 * Created on 07/02/2009, 09:11:20
 */
package jnesbr.gui.debugger;

import java.awt.Color;
import java.awt.Graphics;
import java.util.HashMap;
import java.util.Map;
import jnesbr.core.Emulator;

/**
 *
 * @author Leandro
 */
public class PatternTableViewer extends javax.swing.JFrame {

    /** Creates new form PatternTableViewer */
    public PatternTableViewer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPnPatternTables = new javax.swing.JPanel();
        jBtnShowPT = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Table Pattern Viewer");
        setLocationByPlatform(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPnPatternTables.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPnPatternTablesLayout = new javax.swing.GroupLayout(jPnPatternTables);
        jPnPatternTables.setLayout(jPnPatternTablesLayout);
        jPnPatternTablesLayout.setHorizontalGroup(
            jPnPatternTablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 707, Short.MAX_VALUE)
        );
        jPnPatternTablesLayout.setVerticalGroup(
            jPnPatternTablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );

        jBtnShowPT.setText("Show Pattern Table");
        jBtnShowPT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnShowPTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPnPatternTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnShowPT))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPnPatternTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBtnShowPT)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    private void jBtnShowPTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnShowPTActionPerformed
        Map<Integer, int[][]> patternTable = Emulator.getInstance().getPPU().getPatternTable();

        Map<Integer, Color> colors = new HashMap<Integer, Color>();
        colors.put(0, Color.WHITE);
        colors.put(1, Color.RED);
        colors.put(2, Color.GREEN);
        colors.put(3, Color.BLUE);

        Graphics scr = jPnPatternTables.getGraphics();
        int indexXX = 0, indexYY = 0;
        for (int z = 0; z < 512 ; z++) {
            int[][] tile = patternTable.get(z);
            int temp = indexXX;
            for (byte row = 0; row < 8; row++) {
                indexXX = temp;
                for (byte collumn = 7; collumn >= 0; collumn--, indexXX++) {
                    scr.setColor(colors.get(tile[row][collumn]));
                    scr.fillRect(indexXX * 2, indexYY + row * 2, 2, 2);
                }
            }
            indexXX = temp;
            indexXX += 9;
            if (z != 0) {
                if (z % 38 == 0) {
                    indexXX = 0;
                    indexYY += 9 * 2;
                }
            }
        }
}//GEN-LAST:event_jBtnShowPTActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new PatternTableViewer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnShowPT;
    private javax.swing.JPanel jPnPatternTables;
    // End of variables declaration//GEN-END:variables
}
